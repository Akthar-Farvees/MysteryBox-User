"use strict";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var getSignedHeaders_1 = require("./utils/getSignedHeaders");
var getSigningValues_1 = require("./utils/getSigningValues");
var constants_1 = require("./constants");
var getSignature_1 = require("./utils/getSignature");
/**
 * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.
 *
 * @param request `HttpRequest` to be signed.
 * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.
 * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.
 */
exports.signRequest = function (request, options) {
    var signingValues = getSigningValues_1.getSigningValues(options);
    var accessKeyId = signingValues.accessKeyId, credentialScope = signingValues.credentialScope, longDate = signingValues.longDate, sessionToken = signingValues.sessionToken;
    // create the request to sign
    var headers = tslib_1.__assign({}, request.headers);
    headers[constants_1.HOST_HEADER] = request.url.host;
    headers[constants_1.AMZ_DATE_HEADER] = longDate;
    if (sessionToken) {
        headers[constants_1.TOKEN_HEADER] = sessionToken;
    }
    var requestToSign = tslib_1.__assign(tslib_1.__assign({}, request), { headers: headers });
    // calculate and add the signature to the request
    var signature = getSignature_1.getSignature(requestToSign, signingValues);
    var credentialEntry = "Credential=" + accessKeyId + "/" + credentialScope;
    var signedHeadersEntry = "SignedHeaders=" + getSignedHeaders_1.getSignedHeaders(headers);
    var signatureEntry = "Signature=" + signature;
    headers[constants_1.AUTH_HEADER] = constants_1.SHA256_ALGORITHM_IDENTIFIER + " " + credentialEntry + ", " + signedHeadersEntry + ", " + signatureEntry;
    return requestToSign;
};
//# sourceMappingURL=signRequest.js.map